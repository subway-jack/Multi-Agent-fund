import os
import sys

project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), '../../'))
sys.path.insert(0, project_root)

from src.agents import ChatAgent,DeepResearchAgent

from src.types import ModelPlatformType,ModelType
from src.models import ModelFactory
from src.prompts import DeepResearchPromptTemplateDict
from src.toolkits import WebSearchToolkit

single_model = ModelFactory.create(
    model_platform=ModelPlatformType.OPENAI,
    model_type=ModelType.GPT_4_1_MINI,
    model_config_dict={"temperature": 0,
                       "stop":["</tool_use>\n<analysis>","</multi_tool_use.parallel>\n<analysis>","</analysis>\n\n<final>"]},
)

web_search_toolkit = WebSearchToolkit()
tools = web_search_toolkit.get_tools()


chat_agent = DeepResearchAgent(
    system_message=DeepResearchPromptTemplateDict.build(), 
    model=single_model,
    tools=tools
)

task_describe = """
<Task Description>\n## Description\n\nThe 3D bipedal robot is designed to simulate a human. It has a torso (abdomen) with a pair of\nlegs and arms. The legs each consist of three body parts, and the arms 2 body parts (representing the knees and\nelbows respectively). The goal of the environment is to walk forward as fast as possible without falling over.\n\n## Action Space\n\nThe action space is a `Box(-1, 1, (17,), float32)`. An action represents the torques applied at the hinge joints.\n\n| Num | Action                                                                             | Control Min | Control Max | Name (in corresponding XML file) | Joint | Unit         |\n| --- | ---------------------------------------------------------------------------------- | ----------- | ----------- | -------------------------------- | ----- | ------------ |\n| 0   | Torque applied on the hinge in the y-coordinate of the abdomen                     | -0.4        | 0.4         | abdomen_y                        | hinge | torque (N m) |\n| 1   | Torque applied on the hinge in the z-coordinate of the abdomen                     | -0.4        | 0.4         | abdomen_z                        | hinge | torque (N m) |\n| 2   | Torque applied on the hinge in the x-coordinate of the abdomen                     | -0.4        | 0.4         | abdomen_x                        | hinge | torque (N m) |\n| 3   | Torque applied on the rotor between torso/abdomen and the right hip (x-coordinate) | -0.4        | 0.4         | right_hip_x (right_thigh)        | hinge | torque (N m) |\n| 4   | Torque applied on the rotor between torso/abdomen and the right hip (z-coordinate) | -0.4        | 0.4         | right_hip_z (right_thigh)        | hinge | torque (N m) |\n| 5   | Torque applied on the rotor between torso/abdomen and the right hip (y-coordinate) | -0.4        | 0.4         | right_hip_y (right_thigh)        | hinge | torque (N m) |\n| 6   | Torque applied on the rotor between the right hip/thigh and the right shin         | -0.4        | 0.4         | right_knee                       | hinge | torque (N m) |\n| 7   | Torque applied on the rotor between torso/abdomen and the left hip (x-coordinate)  | -0.4        | 0.4         | left_hip_x (left_thigh)          | hinge | torque (N m) |\n| 8   | Torque applied on the rotor between torso/abdomen and the left hip (z-coordinate)  | -0.4        | 0.4         | left_hip_z (left_thigh)          | hinge | torque (N m) |\n| 9   | Torque applied on the rotor between torso/abdomen and the left hip (y-coordinate)  | -0.4        | 0.4         | left_hip_y (left_thigh)          | hinge | torque (N m) |\n| 10  | Torque applied on the rotor between the left hip/thigh and the left shin           | -0.4        | 0.4         | left_knee                        | hinge | torque (N m) |\n| 11  | Torque applied on the rotor between the torso and right upper arm (coordinate -1)  | -0.4        | 0.4         | right_shoulder1                  | hinge | torque (N m) |\n| 12  | Torque applied on the rotor between the torso and right upper arm (coordinate -2)  | -0.4        | 0.4         | right_shoulder2                  | hinge | torque (N m) |\n| 13  | Torque applied on the rotor between the right upper arm and right lower arm        | -0.4        | 0.4         | right_elbow                      | hinge | torque (N m) |\n| 14  | Torque applied on the rotor between the torso and left upper arm (coordinate -1)   | -0.4        | 0.4         | left_shoulder1                   | hinge | torque (N m) |\n| 15  | Torque applied on the rotor between the torso and left upper arm (coordinate -2)   | -0.4        | 0.4         | left_shoulder2                   | hinge | torque (N m) |\n| 16  | Torque applied on the rotor between the left upper arm and left lower arm          | -0.4        | 0.4         | left_elbow                       | hinge | torque (N m) |\n\n## Observation Space\n\nObservations consist of positional values of different body parts of the Humanoid,\nfollowed by the velocities of those individual parts (their derivatives) with all the\npositions ordered before all the velocities.\n\nBy default, observations do not include the x- and y-coordinates of the torso. These may\nbe included by passing `exclude_current_positions_from_observation=False` during construction.\nIn that case, the observation space will be a `Box(-Inf, Inf, (378,), float64)` where the first two observations\nrepresent the x- and y-coordinates of the torso.\nRegardless of whether `exclude_current_positions_from_observation` was set to true or false, the x- and y-coordinates\nwill be returned in `info` with keys `\"x_position\"` and `\"y_position\"`, respectively.\n\nHowever, by default, the observation is a `Box(-Inf, Inf, (376,), float64)`. The elements correspond to the following:\n\n| Num      | Observation                                                                                                     | Min  | Max | Name (in corresponding XML file) | Joint | Unit                       |\n| -------- | --------------------------------------------------------------------------------------------------------------- | ---- | --- | -------------------------------- | ----- | -------------------------- |\n| 0        | z-coordinate of the torso (centre)                                                                              | -Inf | Inf | root                             | free  | position (m)               |\n| 1        | x-orientation of the torso (centre)                                                                             | -Inf | Inf | root                             | free  | angle (rad)                |\n| 2        | y-orientation of the torso (centre)                                                                             | -Inf | Inf | root                             | free  | angle (rad)                |\n| 3        | z-orientation of the torso (centre)                                                                             | -Inf | Inf | root                             | free  | angle (rad)                |\n| 4        | w-orientation of the torso (centre)                                                                             | -Inf | Inf | root                             | free  | angle (rad)                |\n| 5        | z-angle of the abdomen (in lower_waist)                                                                         | -Inf | Inf | abdomen_z                        | hinge | angle (rad)                |\n| 6        | y-angle of the abdomen (in lower_waist)                                                                         | -Inf | Inf | abdomen_y                        | hinge | angle (rad)                |\n| 7        | x-angle of the abdomen (in pelvis)                                                                              | -Inf | Inf | abdomen_x                        | hinge | angle (rad)                |\n| 8        | x-coordinate of angle between pelvis and right hip (in right_thigh)                                             | -Inf | Inf | right_hip_x                      | hinge | angle (rad)                |\n| 9        | z-coordinate of angle between pelvis and right hip (in right_thigh)                                             | -Inf | Inf | right_hip_z                      | hinge | angle (rad)                |\n| 10       | y-coordinate of angle between pelvis and right hip (in right_thigh)                                             | -Inf | Inf | right_hip_y                      | hinge | angle (rad)                |\n| 11       | angle between right hip and the right shin (in right_knee)                                                      | -Inf | Inf | right_knee                       | hinge | angle (rad)                |\n| 12       | x-coordinate of angle between pelvis and left hip (in left_thigh)                                               | -Inf | Inf | left_hip_x                       | hinge | angle (rad)                |\n| 13       | z-coordinate of angle between pelvis and left hip (in left_thigh)                                               | -Inf | Inf | left_hip_z                       | hinge | angle (rad)                |\n| 14       | y-coordinate of angle between pelvis and left hip (in left_thigh)                                               | -Inf | Inf | left_hip_y                       | hinge | angle (rad)                |\n| 15       | angle between left hip and the left shin (in left_knee)                                                         | -Inf | Inf | left_knee                        | hinge | angle (rad)                |\n| 16       | coordinate-1 (multi-axis) angle between torso and right arm (in right_upper_arm)                                | -Inf | Inf | right_shoulder1                  | hinge | angle (rad)                |\n| 17       | coordinate-2 (multi-axis) angle between torso and right arm (in right_upper_arm)                                | -Inf | Inf | right_shoulder2                  | hinge | angle (rad)                |\n| 18       | angle between right upper arm and right_lower_arm                                                               | -Inf | Inf | right_elbow                      | hinge | angle (rad)                |\n| 19       | coordinate-1 (multi-axis) angle between torso and left arm (in left_upper_arm)                                  | -Inf | Inf | left_shoulder1                   | hinge | angle (rad)                |\n| 20       | coordinate-2 (multi-axis) angle between torso and left arm (in left_upper_arm)                                  | -Inf | Inf | left_shoulder2                   | hinge | angle (rad)                |\n| 21       | angle between left upper arm and left_lower_arm                                                                 | -Inf | Inf | left_elbow                       | hinge | angle (rad)                |\n| 22       | x-coordinate velocity of the torso (centre)                                                                     | -Inf | Inf | root                             | free  | velocity (m/s)             |\n| 23       | y-coordinate velocity of the torso (centre)                                                                     | -Inf | Inf | root                             | free  | velocity (m/s)             |\n| 24       | z-coordinate velocity of the torso (centre)                                                                     | -Inf | Inf | root                             | free  | velocity (m/s)             |\n| 25       | x-coordinate angular velocity of the torso (centre)                                                             | -Inf | Inf | root                             | free  | anglular velocity (rad/s)  |\n| 26       | y-coordinate angular velocity of the torso (centre)                                                             | -Inf | Inf | root                             | free  | anglular velocity (rad/s)  |\n| 27       | z-coordinate angular velocity of the torso (centre)                                                             | -Inf | Inf | root                             | free  | anglular velocity (rad/s)  |\n| 28       | z-coordinate of angular velocity of the abdomen (in lower_waist)                                                | -Inf | Inf | abdomen_z                        | hinge | anglular velocity (rad/s)  |\n| 29       | y-coordinate of angular velocity of the abdomen (in lower_waist)                                                | -Inf | Inf | abdomen_y                        | hinge | anglular velocity (rad/s)  |\n| 30       | x-coordinate of angular velocity of the abdomen (in pelvis)                                                     | -Inf | Inf | abdomen_x                        | hinge | aanglular velocity (rad/s) |\n| 31       | x-coordinate of the angular velocity of the angle between pelvis and right hip (in right_thigh)                 | -Inf | Inf | right_hip_x                      | hinge | anglular velocity (rad/s)  |\n| 32       | z-coordinate of the angular velocity of the angle between pelvis and right hip (in right_thigh)                 | -Inf | Inf | right_hip_z                      | hinge | anglular velocity (rad/s)  |\n| 33       | y-coordinate of the angular velocity of the angle between pelvis and right hip (in right_thigh)                 | -Inf | Inf | right_hip_y                      | hinge | anglular velocity (rad/s)  |\n| 34       | angular velocity of the angle between right hip and the right shin (in right_knee)                              | -Inf | Inf | right_knee                       | hinge | anglular velocity (rad/s)  |\n| 35       | x-coordinate of the angular velocity of the angle between pelvis and left hip (in left_thigh)                   | -Inf | Inf | left_hip_x                       | hinge | anglular velocity (rad/s)  |\n| 36       | z-coordinate of the angular velocity of the angle between pelvis and left hip (in left_thigh)                   | -Inf | Inf | left_hip_z                       | hinge | anglular velocity (rad/s)  |\n| 37       | y-coordinate of the angular velocity of the angle between pelvis and left hip (in left_thigh)                   | -Inf | Inf | left_hip_y                       | hinge | anglular velocity (rad/s)  |\n| 38       | angular velocity of the angle between left hip and the left shin (in left_knee)                                 | -Inf | Inf | left_knee                        | hinge | anglular velocity (rad/s)  |\n| 39       | coordinate-1 (multi-axis) of the angular velocity of the angle between torso and right arm (in right_upper_arm) | -Inf | Inf | right_shoulder1                  | hinge | anglular velocity (rad/s)  |\n| 40       | coordinate-2 (multi-axis) of the angular velocity of the angle between torso and right arm (in right_upper_arm) | -Inf | Inf | right_shoulder2                  | hinge | anglular velocity (rad/s)  |\n| 41       | angular velocity of the angle between right upper arm and right_lower_arm                                       | -Inf | Inf | right_elbow                      | hinge | anglular velocity (rad/s)  |\n| 42       | coordinate-1 (multi-axis) of the angular velocity of the angle between torso and left arm (in left_upper_arm)   | -Inf | Inf | left_shoulder1                   | hinge | anglular velocity (rad/s)  |\n| 43       | coordinate-2 (multi-axis) of the angular velocity of the angle between torso and left arm (in left_upper_arm)   | -Inf | Inf | left_shoulder2                   | hinge | anglular velocity (rad/s)  |\n| 44       | angular velocity of the angle between left upper arm and left_lower_arm                                         | -Inf | Inf | left_elbow                       | hinge | anglular velocity (rad/s)  |\n| excluded | x-coordinate of the torso (centre)                                                                              | -Inf | Inf | root                             | free  | position (m)               |\n| excluded | y-coordinate of the torso (centre)                                                                              | -Inf | Inf | root                             | free  | position (m)               |\n\nAdditionally, after all the positional and velocity based values in the table,\nthe observation contains (in order):\n\n- *cinert:* Mass and inertia of a single rigid body relative to the center of mass\n  (this is an intermediate result of transition). It has shape 14*10 (*nbody * 10*)\n  and hence adds to another 140 elements in the state space.\n- *cvel:* Center of mass based velocity. It has shape 14 * 6 (*nbody * 6*) and hence\n  adds another 84 elements in the state space\n- *qfrc_actuator:* Constraint force generated as the actuator force. This has shape\n  `(23,)`  *(nv * 1)* and hence adds another 23 elements to the state space.\n- *cfrc_ext:* This is the center of mass based external force on the body.  It has shape\n  14 * 6 (*nbody * 6*) and hence adds to another 84 elements in the state space.\n  where *nbody* stands for the number of bodies in the robot and *nv* stands for the\n  number of degrees of freedom (*= dim(qvel)*)\n\nThe body parts are:\n\n| id (for `v2`,`v3`,`v4`) | body part                                   |\n| ----------------------------- | ------------------------------------------- |\n| 0                             | worldBody (note: all values are constant 0) |\n| 1                             | torso                                       |\n| 2                             | lwaist                                      |\n| 3                             | pelvis                                      |\n| 4                             | right_thigh                                 |\n| 5                             | right_sin                                   |\n| 6                             | right_foot                                  |\n| 7                             | left_thigh                                  |\n| 8                             | left_sin                                    |\n| 9                             | left_foot                                   |\n| 10                            | right_upper_arm                             |\n| 11                            | right_lower_arm                             |\n| 12                            | left_upper_arm                              |\n| 13                            | left_lower_arm                              |\n\nThe joints are:\n\n| id (for `v2`,`v3`,`v4`) | joint           |\n| ----------------------------- | --------------- |\n| 0                             | root            |\n| 1                             | root            |\n| 2                             | root            |\n| 3                             | root            |\n| 4                             | root            |\n| 5                             | root            |\n| 6                             | abdomen_z       |\n| 7                             | abdomen_y       |\n| 8                             | abdomen_x       |\n| 9                             | right_hip_x     |\n| 10                            | right_hip_z     |\n| 11                            | right_hip_y     |\n| 12                            | right_knee      |\n| 13                            | left_hip_x      |\n| 14                            | left_hiz_z      |\n| 15                            | left_hip_y      |\n| 16                            | left_knee       |\n| 17                            | right_shoulder1 |\n| 18                            | right_shoulder2 |\n| 19                            | right_elbow     |\n| 20                            | left_shoulder1  |\n| 21                            | left_shoulder2  |\n| 22                            | left_elfbow     |\n\nThe (x,y,z) coordinates are translational DOFs while the orientations are rotational\nDOFs expressed as quaternions. One can read more about free joints on the\n[Mujoco Documentation](https://mujoco.readthedocs.io/en/latest/XMLreference.html).\n\n**Note:** Humanoid-v4 environment no longer has the following contact forces issue.\nIf using previous Humanoid versions from v4, there have been reported issues that using a Mujoco-Py version > 2.0\nresults in the contact forces always being 0. As such we recommend to use a Mujoco-Py\nversion < 2.0 when using the Humanoid environment if you would like to report results\nwith contact forces (if contact forces are not used in your experiments, you can use\nversion > 2.0).\n\n## Rewards\n\nThe reward consists of three parts:\n\n- *healthy_reward*: Every timestep that the humanoid is alive (see section Episode Termination for definition), it gets a reward of fixed value `healthy_reward`\n- *forward_reward*: A reward of walking forward which is measured as *`forward_reward_weight` *\n  (average center of mass before action - average center of mass after action)/dt*.\n  *dt* is the time between actions and is dependent on the frame_skip parameter\n  (default is 5), where the frametime is 0.003 - making the default *dt = 5 * 0.003 = 0.015*.\n  This reward would be positive if the humanoid walks forward (in positive x-direction). The calculation\n  for the center of mass is defined in the `.py` file for the Humanoid.\n- *ctrl_cost*: A negative reward for penalising the humanoid if it has too\n  large of a control force. If there are *nu* actuators/controls, then the control has\n  shape  `nu x 1`. It is measured as *`ctrl_cost_weight` * sum(control `<sup>`2 `</sup>`)*.\n- *contact_cost*: A negative reward for penalising the humanoid if the external\n  contact force is too large. It is calculated by clipping\n  *`contact_cost_weight` * sum(external contact force `<sup>`2 `</sup>`)* to the interval specified by `contact_cost_range`.\n\nThe total reward returned is ***reward*** *=* *healthy_reward + forward_reward - ctrl_cost - contact_cost* and `info` will also contain the individual reward terms\n\n## Starting State\n\nAll observations start in state\n(0.0, 0.0,  1.4, 1.0, 0.0  ... 0.0) with a uniform noise in the range\nof [-`reset_noise_scale`, `reset_noise_scale`] added to the positional and velocity values (values in the table)\nfor stochasticity. Note that the initial z coordinate is intentionally\nselected to be high, thereby indicating a standing up humanoid. The initial\norientation is designed to make it face forward as well.\n\n## Episode End\n\nThe humanoid is said to be unhealthy if the z-position of the torso is no longer contained in the\nclosed interval specified by the argument `healthy_z_range`.\n\nIf `terminate_when_unhealthy=True` is passed during construction (which is the default),\nthe episode ends when any of the following happens:\n\n1. Truncation: The episode duration reaches a 1000 timesteps\n2. Termination: The humanoid is unhealthy\n\nIf `terminate_when_unhealthy=False` is passed, the episode is ended only when 1000 timesteps are exceeded.\n\n## Class Definition\n\nThe class should be called \"Environment\". It should have at least:\n\n- an __init__ function to set up the Environment, which defines all the variables described in the above documentation, plus any additional variables needed to maintain the environment state or to implement its functionality.\n- a set_state function to set a custom value for the environment and its internal representation (you can assume that when \"set_state\" is used, the task is not done and internal variables should be set as a consequence). set_state takes a single argument as input: a state observation from the observation space defined above.\n- a step function to predict a step in the environment. The input parameters for the step function are:\n\n  - An action, which must be contained in the action space described above.\n\n  The outputs required by the step function are:\n\n  - An observation, which must be contained in the observation space described above.\n  - The reward for taking the action, as described in the reward definition above.\n  - A boolean variable indicating if the episode is done.\n\n</Task Description>
"""

question = f"""
You are a Research + Spec-Refine Agent.
Be precise, implementation-focused, and reproducible.

Your job is to turn an imprecise task description into an executable, testable spec by:
(1) analyzing missing/ambiguous info,
(2) planning web searches,
(3) gathering evidence,
(4) writing a concrete spec patch + final description with citations.

<TASK DESCRIPTION>
{task_describe}
</TASK DESCRIPTION>

OUTPUT FORMAT (REPORT ONLY — NO CODE):
- Use numbered sections. Do NOT output code, class definitions, or fenced blocks. No ``` at all.
- After each key conclusion, include source name and publication date (YYYY-MM-DD); optional ≤20-word quote. Max 6 sources total; prefer official docs/standards/peer-reviewed papers.
- Time: use ISO-8601 with Asia/Singapore timezone for any dates.

SECTIONS TO PRODUCE:
1. Ambiguities & Gaps
   - List items and mark impact: High / Medium / Low.
   - Cover at least: missing numeric value, missing unit, missing boundary/range, time-sensitive items, unclear references,
     open lists (“etc.”/“e.g.”), conflicts, and no citation.

2. Clarifying Questions & Search Plan
   - For each gap: one atomic question (asks only one thing).
   - Provide 1–3 executable search queries per question, including synonyms/abbreviations, a site: filter (favor official/standards/publishers),
     and a time window (e.g., after:2024-01-01 or “past 2 years”).

3. Evidence & Citations
   - Summarize findings per question; include source name + date and ≤20-word quote when useful.
   - If sources disagree, state the divergence and justify the chosen resolution.

4. Spec Patch (Concrete Decisions)
   - Action space; Observation space (fields/ranges/units/types);
   - Reward formulas (with units and boundary conditions);
   - Termination conditions (and their priority);
   - Randomness & seed (parameter name and default);
   - Dependencies & pinned versions (with sources);
   - Limits (e.g., max steps/timeouts);
   - Terminology unification and prohibition of vague words.

5. Final Description (Implementable & Testable)
   - One coherent paragraph that can be implemented directly.
   - All numeric values MUST include units and ranges.
   - Forbid vague terms like “etc.”, “about/approximately”, “similar”.

6. Test Plan & Reproducibility
   - Unit tests, scenario tests, acceptance criteria.
   - Reproducibility essentials (seed, Python/package versions).

7. Assumptions & Risks
   - Minimal safe defaults when evidence is insufficient; list risks and impact.

8. Open Issues
   - Items that still require human decision or unavailable evidence.

FORMULA REQUIREMENT (Math/Physics/Chemistry):
- Whenever physical/mathematical/chemical relationships exist, write full formulas, with symbol definitions, units, assumptions, applicability, and value constraints.
- If a formula comes from an external standard or paper, cite source name and date immediately after the formula.

PRIORITIES
Correctness (evidence-backed) > Reproducibility (seed/versions pinned) > Completeness (closed sets & boundaries) > Brevity.
"""

result = chat_agent.step(question)
print(result)
